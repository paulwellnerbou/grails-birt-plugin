buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id 'net.researchgate.release' version '2.7.0'
}

group "org.grails.plugins"

apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://www.it-jw.com/maven" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile 'org.eclipse.birt.runtime:org.eclipse.birt.runtime:4.3.0a'
    
    // necessary to prevent following error:
    // Caused by: java.lang.NoSuchMethodError: org.mozilla.javascript.Parser.parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
    compile group: 'rhino', name: 'js', version: '1.7R1'
    
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    testCompile "org.grails:grails-gorm-testing-support"
}

allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

if (!project.hasProperty("s3AccessKey")) {
    ext.publishUser = ""
}
if (!project.hasProperty("s3SecretKey")) {
    ext.publishKey = ""
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://tesolva-maven-repo/"
            credentials(AwsCredentials) {
                accessKey project.findProperty("s3AccessKey") ?: ""
                secretKey project.findProperty("s3SecretKey") ?: ""
            }
        }
    }
}
